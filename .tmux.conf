# disable the status bar
# set -g status off

set-window-option -g mode-keys vi
set-window-option -g set-clipboard on

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key P paste-buffer

bind r source-file ~/.tmux.conf
bind C-c display-popup -w 70% -h 3 -E 'IFS= read -p "Chat > " -r line; send-twitch-msg "$line"'

# Spotify controls
bind-key l run-shell "baton next > /dev/null"
bind-key h run-shell "baton prev > /dev/null"
bind-key j run-shell "baton status"
bind-key k run-shell "baton pause > /dev/null"
bind-key Enter run-shell "baton save > /dev/null"


set -g mouse on
set -g focus-events on

# transfer copied text to attached terminal with yank
bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank > #{pane_tty}'
set-hook -g pane-set-clipboard "run-shell 'tmux save-buffer - | yank > #{pane_tty}'"

# transfer most-recently copied text to attached terminal with yank
bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# transfer previously copied text (chosen from a menu) to attached terminal
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'

# Prevent tmux from starting a login shell
set-option -g default-command zsh

# make neovim + ST happy
# set -as terminal-overrides ',st*:Ss@'

# enable 256 color
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
set -as terminal-overrides ',xterm*:sitm=\E[3m'
# set -g default-terminal 'tmux-256color'
# set -ga terminal-overrides ',*256col*:Tc'

# use ctr-b {h,v} to split horizontally and vertically, not ctrl-b {",%}
# also, open new splits and windows in the current directory, not the one tmux was launched from
unbind-key %
unbind-key '"'
bind-key c neww -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'

# collapse sessions by default
bind-key w choose-tree -s

# infinite scrollback
set-option -g history-limit 300000

# make vim happier
set-option -sg escape-time 10

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='ps -o state= -o comm= -t "#{pane_tty}" | grep -iqE "^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$"'
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Status bar
# set -g status-right '#(spotify-status-bar)'
set-option -g status-position top

# Save history to file
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -; save-buffer %1 ; delete-buffer'

# If so, respawn; else kill the pane.
# Credit to nicm on Freenode #tmux.
set -g detach-on-destroy off
set -g remain-on-exit on
set-hook -g pane-died "if -F '#{&&:#{==:#{session_windows},1},#{==:#{window_panes},1}}' 'respawn-pane' 'kill-pane'"

# praise lua
set -g base-index 1
setw -g pane-base-index 1

# pane titles for hostname
# set -g pane-border-format " #T "
# set -g pane-border-status top
wn="#{?#{==:#W,zsh},, #W}"

set -g status-right "%H:%M %d %b %y "
set -g status-style fg=white,bg=#000000
set -g status-left "#{?client_prefix,#[bg=yellow],#[bg=green]}#[fg=black] #{session_name} "
set -g window-status-current-style fg=#ffffff
set -g window-status-activity-style bg=yellow,fg=#000000
set -g window-status-bell-style bg=yellow,fg=#000000
set -g window-status-current-format " #I${wn} "
set -g window-status-format " #I${wn} "
set -g window-status-separator "|"
setw -g automatic-rename-format "#{pane_current_command}#{?pane_dead,[dead],}"
