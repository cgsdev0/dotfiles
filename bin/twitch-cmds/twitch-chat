#!/bin/zsh

cd "${0%/*}"

# twitch chat bot
# twitch docs reference: https://dev.twitch.tv/docs/irc

CHAN=$1
LDJAM_INDEX=54
LDJAM_ENABLED=false
ITCHJAM_ENABLED=false

if [[ ! -z "$BADCOP" ]]; then
  source ~/.twitch_secrets;
else
  source ~/.twitch_secrets_bot;
fi
source ./fish-cmds;
source ../utils/url-parsing;
source ./ld-cmds;
source ./jam-cmds;

LOG_FILE="$HOME/twitch-logs/$(date "+%Y-%m-%d_%H-%M-%S").log"
touch "$LOG_FILE"

COW_DATA="$HOME/cows/$CHAN/"
mkdir -p "$COW_DATA"

rm -f /tmp/twitch_tunnel;
mkfifo /tmp/twitch_tunnel;

# Example chat msg:
# @badge-info=;badges=;client-nonce=31ab40a7bef7162bfc8eade860eb185a;color=#DAA520;display-name=BuddysPizza;emotes=;first-msg=0;flags=;id=e86038a5-4d49-4868-aa96-b563da8fc689;mod=0;room-id=56931496;subscriber=0;tmi-sent-ts=1643181677955;turbo=0;user-id=42089909;user-type= :buddyspizza!buddyspizza@buddyspizza.tmi.twitch.tv PRIVMSG #badcop_ :!help

colorize() {
    printf "\x1b[38;2;$(( 16#${1:0:2} ));$(( 16#${1:2:2} ));$(( 16#${1:4:2} ))m"
}

get_cow() {
  if test -f "$COW_DATA/$1"; then
    cat "$COW_DATA/$1"
  else
    echo default.cow
  fi
}

set_cow() {
  COW="/usr/share/cowsay/cows/$2.cow"
  if test -f "$COW"; then
    echo "$COW" > "$COW_DATA/$1"
    return 0
  fi
  return 1
}

reply() {
    if [[ "$*" == "" ]]; then
      return
    fi
    colorize "ff0000" 1>&2
    echo -n "bot" 1>&2
    printf '\033[0m' 1>&2
    echo -n ": " 1>&2
    echo "$@" 1>&2
    echo "PRIVMSG #${CHAN} :$@\r\n"
}

parsecmd() {
    msg=$(echo -n "$1" | grep -aoP "PRIVMSG.*$" | cut -d':' -f2- | tr '[:upper:]' '[:lower:]')
    msg_loud=$(echo -n "$1" | grep -aoP "PRIVMSG.*$" | cut -d':' -f2-)
    headers=$(echo -n "$1" | grep -aoP "^.*PRIVMSG")
    name=$(echo -n "$headers" | grep -aoP ";display-name=.*?;" | cut -d'=' -f2 | tr -d ';')
    mod=$(echo -n "$headers" | grep -aoP ";mod=.*?;" | cut -d'=' -f2 | tr -d ';')
    IS_SUBSCRIBER=$(echo -n "$headers" | grep -aoP ";subscriber=.*?;" | cut -d'=' -f2 | tr -d ';')
    case $msg in
        "!crab")
            ;&
        *"ðŸ¦€"*)
            reply "ðŸ¦€ðŸš«ðŸ¦€ðŸš«ðŸ¦€ðŸš«ðŸ¦€ðŸš«"
            ;;
        *"goodcop_"*)
            if [[ "$headers" == *"reply-parent-user-login=goodcop_;"* ]]; then
                reply "@$name don't reply to me LUL"
            else
                reply "@$name don't at me"
            fi
            ;;
        "!ping")
            reply "pong!"
            ;;
        "!variant")
            reply "this state is hard to achieve"
            ;;
        "!posix")
            reply "https://twitter.com/badcop_/status/1692837652477718917"
            ;;
        "!aoc")
            reply "check out my advent of code 2023 solutions! https://github.com/cgsdev0/aoc-2023"
            ;;
        "!stack")
            reply "we are building bash stack, a web framework in bash: http://bashsta.cc"
            ;;
        "!setcow "*)
            cow=$(echo -n "$msg" | cut -d' ' -f2)
            if set_cow "$name" "$cow"; then
              reply "Cow set!"
            else
              reply "invalid cow!"
            fi
            ;;
        "!botsnack")
            count=$(cat ~/.twitch_snack_counter)
            count=$(( count + 1 ))
            echo "$count" > ~/.twitch_snack_counter
            if (( $count % 5 == 0 ))
            then
              reply "my tummy hurts :("
            else
              reply "yum, thanks :)"
            fi
            ;;
        "!yt")
            ;&
        "!youtube")
            ;&
        "!bashcop")
            reply "https://youtube.com/@bashcop"
            ;;
        "!winrar")
            ;&
        "!tmux")
            tmux display-popup -h 12 -w 50 winrar-tmux-popup &
            ;;
        "!hi")
            reply "/me waves"
            ;;
        "!fish leaderboard")
            reply "$(fish_leaderboard)"
            ;;
        "!discord")
            reply "join our discord! https://discord.badcop.games/"
            ;;
        "!theme")
            reply "tokyonight https://github.com/folke/tokyonight.nvim"
            ;;
        "!keyboard")
            # reply "massdrop alt high profile w/ novelkey olivia silk switches"
            reply "NK65 olivia edition https://novelkeys.com/collections/keyboards/products/nk65-olivia-edition"
            ;;
        "!font")
            reply "I use the hack font: https://sourcefoundry.org/hack/"
            ;;
        *"badcop3fish"*)
            ;&
        "!fish "*)
            ;&
        "!fish")
            reply "$(catch_fish)"
            ;;
        "!rod")
            rod=$(get_rod)
            rod_name=$(echo "$rod" | cut -d' ' -f1)
            rod_uses=$(echo "$rod" | cut -d' ' -f2)
            reply "@$name has a $rod_name rod ($rod_uses uses left)"
            ;;
        "!tomorrow")
            reply "rust stream?"
            ;;
        "!help")
            ;&
        "!commands")
            reply "!fish, !fishdex, !roll, !count, !play, !discord, !today, !jump"
            ;;
        "!q "*)
            printf "%s %s: " "$(date "+%Y-%m-%d %H:%M")" "$name" >> "$HOME/.queue"
            echo "$msg_loud" | cut -d' ' -f2- >> "$HOME/.queue"
            reply "@$name Message queued for later!"
            ;;
        "!settoday "*)
            if [[ "$mod" != "0" ]] || [[ "$name" == "badcop_" ]]; then
              echo "$msg_loud" | cut -d' ' -f2- >> "$HOME/.today"
            fi
            ;;
        "!today")
            reply "$(tail -n1 $HOME/.today)"
            ;;
        "!jump")
            reply "/me jumps"
            ;;
        "!fishdex all")
            reply "$(fishdex_all)"
            ;;
        "!fishdex")
            reply "$(fishdex)"
            ;;
        "!fishdex "*)
            USER="$(basename "$(echo "$msg_loud" | cut -d' ' -f2)")"
            reply "$(fishdex_check "$USER")"
            ;;
        "!count")
            count=$(cat ~/.twitch_counter)
            count=$(( count + 1 ))
            echo "$count" > ~/.twitch_counter
            reply "$count"
            ;;
        "!roll"*)
            # !roll 20
            val=$(echo -n "$msg" | cut -d' ' -f2)
            re='^[0-9]+$'
            if ! [[ $val =~ $re ]] ; then
                reply "not a valid number!"
            else
                reply "$((1 + $RANDOM % $val))"
            fi
            ;;
        "!sync")
            if [[ "$name" == "badcop_" ]]; then
                cd ~/fishing-data
                git add -A &> /dev/null
                git commit -am "sync" &> /dev/null
                git push &> /dev/null
            fi
            ;;
        "!song")
            reply "$(baton status | head -n2 | cut -d':' -f2- | paste -sd' ')"
            ;;
        "!ld")
            ;&
        "!link")
            ;&
        "!play")
            if [[ "$CHAN" == "badcop_" ]]; then
                reply "Here is my LD compo entry: https://ldjam.com/events/ludum-dare/54/bit-golf"
            fi
            ;;
        "!dice")
            ;&
        "!rollycubes")
            if lsof -i:3000 &> /dev/null; then
                reply "Join my game: https://rollycubes.live"
            else
                reply "rollycubes is not running right now :("
            fi
            ;;
        # memes
        "!sha2")
            reply "It is balderdash by scam artists trying to bamboozle people into buying fintech snake oil"
            ;;
        "!modules")
            reply "they are orthogonal to namespaces"
            ;;
        "!pronouns")
            ;&
        "!gender")
            reply "i prefer to go by she/her or they/them pronouns"
            ;;
        "!lurk"*)
            reply "sounds good, $name :)"
            ;;
        "!dotfiles")
            reply "https://github.com/cgsdev0/dotfiles"
            ;;
        "!bot")
            reply "i live here: https://github.com/cgsdev0/dotfiles/blob/main/bin/twitch-cmds/twitch-chat"
            ;;
        *"haha"*)
            reply "lol"
            ;;
        "!itch")
            ;&
        "!games")
            reply "https://badcop.itch.io/"
            ;;
        *"heh"*)
            reply "haha"
            ;;
        # support ludum dare submission links
        *"https://ldjam.com/events/ludum-dare/${LDJAM_INDEX}/"*)
            [[ "$LDJAM_ENABLED" == "true" ]] && reply "$(ld_submit_cmd)"
            ;;
        "!submit"*)
            [[ "$LDJAM_ENABLED" == "true" ]] && reply "Just paste the link in the chat :)"
            [[ "$ITCHJAM_ENABLED" == "true" ]] && reply "$(itch_submit_cmd)"
            ;;
        "!endraffle")
            [[ "$LDJAM_ENABLED" == "true" ]] && reply "$(ld_endraffle_cmd)"
            [[ "$ITCHJAM_ENABLED" == "true" ]] && reply "$(itch_endraffle_cmd)"
            ;;
        "!raffle")
            [[ "$LDJAM_ENABLED" == "true" ]] && reply "$(ld_raffle_cmd)"
            [[ "$ITCHJAM_ENABLED" == "true" ]] && reply "$(itch_raffle_cmd)"
            ;;
        "!join")
            [[ "$LDJAM_ENABLED" == "true" ]] && reply "$(ld_join_cmd)"
            [[ "$ITCHJAM_ENABLED" == "true" ]] && reply "$(itch_join_cmd)"
            ;;
        "!game")
            [[ "$LDJAM_ENABLED" == "true" ]] && reply "$(ld_game_cmd)"
            [[ "$ITCHJAM_ENABLED" == "true" ]] && reply "$(itch_game_cmd)"
            ;;
        "!next")
            [[ "$LDJAM_ENABLED" == "true" ]] && reply "$(ld_next_cmd)"
            [[ "$ITCHJAM_ENABLED" == "true" ]] && reply "$(itch_next_cmd)"
            ;;
        # make the bot sassy
       *"golang"*)
           reply "more like nolang"
           ;;
       *"emacs"*)
           reply "vim is better"
           ;;
       *"kuviman"*)
           if [[ "$headers" != *"reply-parent-user-login=kuviman;"* ]]; then
             reply "rust is better"
           fi
           ;;
       *"evanmmo"*)
           if [[ "$headers" != *"reply-parent-user-login=evanmmo;"* ]]; then
             reply "balloon! *pop* *pop* *pop* *pop*"
           fi
           ;;
       # *"vim"*)
       #     reply "emacs is better"
       #     ;;
       *"linux"*)
           # reply "i use arch btw"
           ;;
    esac
}
parsechat() {
    color=$(echo -n "$1" | grep -aoP "color=.*?;" | cut -d'=' -f2- | tr -d '#;\n')
    name=$(echo -n "$1" | grep -aoP "display-name=.*?;" | cut -d'=' -f2- | tr -d ';\n')
    msg=$(echo -n "$1" | grep -aoP "PRIVMSG.*$" | cut -d':' -f2-)
    if [[ "${#color}" != "6" ]]; then
        color=${"$(echo "$name" | md5sum)":3:9}
    fi
    if [[ "$1" == *"custom-reward-id=15569ace-d070-4037-986d-967f44196d74;"* ]]; then
        colorize $color
        colorize $color > ~/current_cow
        echo "$name has a message for you!" >> ~/current_cow
        cow=$(get_cow "$name")
        echo "$msg" | cowsay -f "$cow" >> ~/current_cow
        if [[ "$name" == "kuviman" ]]; then
          tmux display-popup -h 80% -w 80% "glitchcat ~/current_cow --duration infinite --glitchness 30 --amount 30" &
        else
          tmux display-popup -h 80% -w 80% "cat ~/current_cow" &
        fi
    elif [[ "$msg" == $'\x01'"ACTION "* ]]; then
        colorize $color
        echo "$name" $(echo "$msg" | cut -d' ' -f2-)
    else
        colorize $color
        printf "$name"
        printf '\033[0m'
        echo -n ": "
        echo "$msg"
    fi
}
reqreader() {
  while IFS= read -r line; do
    printf "time=%s;%s\n" $(date "+%Y-%m-%d_%H:%M:%S") "$line" >> "$LOG_FILE"
    [[ $line == "PING"* ]] && echo "PONG :tmi.twitch.tv";
    [[ "$line" == "SYSTEM_EV "* ]] && reply "$(echo $line | sed 's/^SYSTEM_EV //')"
    [[ -z "$DISABLE_COMMANDS" ]] && [[ "$line" == *" PRIVMSG "* ]] && (parsechat "$line" 1>&2; parsecmd "$line")
  done;
  exit 0;
}

set -o pipefail;
while true; do
  (echo "CAP REQ :twitch.tv/tags twitch.tv/commands\r\nPASS oauth:${TWITCH_ACCESS_TOKEN}\r\nNICK ${TWITCH_NICK}\r\nJOIN #${CHAN}\r"; \
      </tmp/twitch_tunnel | reqreader) \
      | websocat -E wss://irc-ws.chat.twitch.tv:443 --ping-timeout 15 --ping-interval 10 \
      | >/tmp/twitch_tunnel;
  FAILED=$?
  if [[ "$FAILED" -ge 130 ]]; then
    exit 0
  fi
  echo "IT CRASHED, RESTARTING"
  refresh-token-bot
done
