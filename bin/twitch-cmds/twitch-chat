#!/bin/zsh

CHAN=$1
source ~/.twitch_secrets_bot;

rm -f /tmp/twitch_tunnel;
mkfifo /tmp/twitch_tunnel;

# Example chat msg:
# @badge-info=;badges=;client-nonce=31ab40a7bef7162bfc8eade860eb185a;color=#DAA520;display-name=BuddysPizza;emotes=;first-msg=0;flags=;id=e86038a5-4d49-4868-aa96-b563da8fc689;mod=0;room-id=56931496;subscriber=0;tmi-sent-ts=1643181677955;turbo=0;user-id=42089909;user-type= :buddyspizza!buddyspizza@buddyspizza.tmi.twitch.tv PRIVMSG #badcop_ :!help

colorize() {
    printf "\x1b[38;2;$(( 16#${1:0:2} ));$(( 16#${1:2:2} ));$(( 16#${1:4:2} ))m"
}

classify_fish() {
    n=$1
    if ((n == 1)); then
        echo "LEGENDARY"
    elif ((n >= 1 && n <= 5)); then
        echo "EPIC"
    elif ((n >= 6 && n <= 15)); then
        echo "Rare"
    elif ((n >= 16 && n <= 25)); then
        echo "Uncommon"
    else
        echo "Common"
    fi
}

reply() {
    colorize "ff0000" 1>&2
    echo -n "bot" 1>&2
    printf '\033[0m' 1>&2
    echo -n ": " 1>&2
    echo "$@" 1>&2
    echo "PRIVMSG #${CHAN} :$@\r\n"
}
parsecmd() {
    msg=$(echo -n "$1" | grep -oP "PRIVMSG.*$" | cut -d':' -f2- | tr '[:upper:]' '[:lower:]')
    name=$(echo -n "$1" | grep -oP "display-name=.*?;" | cut -d'=' -f2- | tr -d ';\n')
    case $msg in
        "!ping")
            reply "pong!"
            ;;
        "!fish leaderboard")
            cd "$HOME/fishing-data/badcop_"
            reply "$(wc -l * | head -n -1 | sort -nr | head -n 5 | paste -sd '|' | sed 's/|/ | /g')"
            ;;
        "!discord")
            reply "join our discord! https://discord.gg/m2ZzF8CQrW"
            ;;
        "!fish")
            now=$(date +%s)
            if [[ -f "$HOME/fishing-cooldowns/.$name.cooldown" ]]; then
                cooldown=$(cat "$HOME/fishing-cooldowns/.$name.cooldown")
                if [[ $cooldown -gt $now ]]; then
                    return
                fi
            fi
            fish=$(shuf -n 1 $HOME/fish)
            most_count=$(cat ~/fishing-data/${CHAN}/* \
                | sort \
                | uniq -c \
                | sort -nr \
                | head -n 1 \
                | grep -oE '[0-9].*' \
                | cut -d' ' -f1)
            count=$(cat $HOME/fishing-data/${CHAN}/* | grep "$fish" | wc -l)
            expected_count=$(cat $HOME/fish \
                | sort \
                | uniq -c \
                | sort -n \
                | awk '{$1=$1};1' \
                | grep "$fish" \
                | cut -d' ' -f1)
            classification=$(classify_fish $expected_count)
            description="a"
            touch "$HOME/fishing-data/${CHAN}/$name"
            personalcount=$(cat "$HOME/fishing-data/${CHAN}/$name" | grep "$fish" | wc -l)
            if [[ $personalcount -eq 0 ]]; then
                description="their first"
            fi

            rarity=$(bc <<< "scale=2; 100 - ( $count / $most_count * 100 )")
            echo "$fish" >> "$HOME/fishing-data/${CHAN}/$name"
            echo $(( now + 120 )) > "$HOME/fishing-cooldowns/.$name.cooldown"
            if [[ $count -eq 0 ]]; then
                reply "@$name caught $description $fish ($classification)! ( never caught before :O )"
            else
                reply "@$name caught $description $fish ($classification)! ($rarity% rarity)"
            fi
            ;;
        "!help")
            ;&
        "!commands")
            reply "!fish, !fishdex, !roll, !count, !play, !discord, !today, !jump"
            ;;
        "!today")
            reply "$(cat $HOME/.today)"
            ;;
        "!jump")
            reply "/me jumps"
            ;;
        "!fishdex all")
            total=$(cat $HOME/fish | sort -u | wc -l)
            count=$(cat $HOME/fishing-data/${CHAN}/* | sort -u | wc -l)
            reply "$count out of $total possible fish have been caught."
            ;;
        "!fishdex")
            total=$(cat $HOME/fish | sort -u | wc -l)
            touch "$HOME/fishing-data/${CHAN}/$name"
            count=$(cat "$HOME/fishing-data/${CHAN}/$name" | sort -u | wc -l)
            reply "@$name has caught $count out of $total possible fish!"
            ;;
        "!count")
            count=$(cat ~/.twitch_counter)
            count=$(( count + 1 ))
            echo "$count" > ~/.twitch_counter
            reply "$count"
            ;;
        "!roll"*)
            # !roll 20
            val=$(echo -n "$msg" | cut -d' ' -f2)
            re='^[0-9]+$'
            if ! [[ $val =~ $re ]] ; then
                reply "not a valid number!"
            else
                reply "$((1 + $RANDOM % $val))"
            fi
            ;;
        "!play")
            ;&
        "!dice")
            ;&
        "!rollycubes")
            if lsof -i:3000 &> /dev/null; then
                reply "Join my game: https://rollycubes.live"
            else
                reply "rollycubes is not running right now :("
            fi
            ;;
        "!lurk")
            reply "ok $name, enjoy your lurk"
            ;;
        "!bot")
            reply "i live here: https://github.com/cgsdev0/dotfiles/blob/main/bin/twitch-cmds/twitch-chat"
            ;;
        *"haha"*)
            reply "lol"
            ;;
        *"heh"*)
            reply "haha"
            ;;
        *"emacs"*)
            reply "vim is better"
            ;;
        *"vim"*)
            reply "emacs is better"
            ;;
    esac
}
parsechat() {
    color=$(echo -n "$1" | grep -oP "color=.*?;" | cut -d'=' -f2- | tr -d '#;\n')
    name=$(echo -n "$1" | grep -oP "display-name=.*?;" | cut -d'=' -f2- | tr -d ';\n')
    msg=$(echo -n "$1" | grep -oP "PRIVMSG.*$" | cut -d':' -f2-)
    if [[ "${#color}" != "6" ]]; then
        color=${"$(echo "$name" | md5sum)":3:9}
    fi
    if [[ "$1" == *"custom-reward-id=15569ace-d070-4037-986d-967f44196d74;"* ]]; then
        colorize $color
        echo "$name summoned a cow!"
        cowsay "$msg"
    elif [[ "$msg" == "!lolcat "* ]]; then
        colorize $color
        printf "$name"
        printf '\033[0m'
        echo -n ": "
        echo "$msg" | cut -d' ' -f2- | lolcat
    elif [[ "$msg" == $'\x01'"ACTION "* ]]; then
        colorize $color
        echo "$name" $(echo "$msg" | cut -d' ' -f2-)
    else
        colorize $color
        printf "$name"
        printf '\033[0m'
        echo -n ": "
        echo "$msg"
    fi
}
reqreader() {
  while IFS= read -r line; do
    [[ $line == "PING"* ]] && echo "PONG :tmi.twitch.tv\r";
    [[ "$line" == *" PRIVMSG "* ]] && (parsechat "$line" 1>&2; parsecmd "$line")
  done;
  exit 0;
}
(echo "CAP REQ :twitch.tv/tags twitch.tv/commands\r\nPASS oauth:${TWITCH_ACCESS_TOKEN}\r\nNICK goodcop_\r\nJOIN #${CHAN}\r"; \
    </tmp/twitch_tunnel | reqreader) \
    | websocat_linux64 wss://irc-ws.chat.twitch.tv:443 \
    | >/tmp/twitch_tunnel
