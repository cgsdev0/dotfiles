#!/bin/zsh

ld_state_file="$HOME/ludum-dare/$CHAN/.ld-jam-list"
ld_data_file="$HOME/ludum-dare/$CHAN/.ld-jam-data"
ld_raffle_file="$HOME/ludum-dare/$CHAN/.ld-jam-raffle"

mkdir -p $(dirname "$ld_state_file")
mkdir -p $(dirname "$ld_data_file")
mkdir -p $(dirname "$ld_raffle_file")

touch "$ld_state_file"
touch "$ld_data_file"
touch "$ld_raffle_file"

ld_raffle_cmd() {
  if test -f "${ld_raffle_file}_LOCK"; then
      echo "a raffle is already going, end it with !endraffle first pls"
      return
  fi
  if [[ "$name" != "$CHAN" ]] && [[ "$name" != "badcop_" ]]; then
      return
  fi
  touch "${ld_raffle_file}_LOCK"
  rm -f "$ld_raffle_file"
  touch "$ld_raffle_file"
  echo "A raffle has begun! type !join to enter (you must already have your game in the queue to join)"
}

ld_submit_cmd() {
  position_data=$(cat "$ld_state_file" | grep -vE " PLAYED$")
  uri=$(echo "$msg" | grep -oE "https://ldjam.com/[^ ]+")
  id=$(parse_path "$uri")
  # echo  "https://api.ldjam.com/vx/node2/walk/1${id}?node&author"
  resp=$(curl -Ss "https://api.ldjam.com/vx/node2/walk/1${id}?node&author" | jq -rc '{ type: .node[0].subsubtype, name: .node[0].name, author: .node[1].name, authorCount: .node[0].meta.author | length, slug: .node[0].slug }')
  entry_type=$(echo "$resp" | jq -r '.type')
  gamename=$(echo "$resp" | jq -r '.name')
  author=$(echo "$resp" | jq -r '.author')
  friends=$(echo "$resp" | jq -r '.authorCount')
  slug=$(echo "$resp" | jq -r '.slug')
  position=$( {cat "$ld_state_file"; echo "---"} | grep -vcE " PLAYED$" | cut -d':' -f1)
  if grep -q "$slug" "$ld_state_file"; then
      pos=$(echo "$position_data" | grep -n "$slug" | cut -d':' -f1)
      if [[ "$pos" == "" ]]; then
          echo "We've already played that game! :O"
      else
          echo "I already have that game :)"
      fi
      return
  fi
  # append to state file
  echo "$slug $name" >> "$ld_state_file"
  echo "$slug $resp" >> "$ld_data_file"

  if [[ "$friends" != "1" ]]; then
      fc="$((friends-1))"
      author="$author and $fc friends"
  fi

  # de-dupe data file
  cat "${ld_data_file}" | sort | uniq > "${ld_data_file}2"
  mv "${ld_data_file}2" "${ld_data_file}"

  echo "Thanks! I've added the $entry_type game '$gamename' to the queue (position: #$position)! (Made by $author) @$CHAN can use !next to advance the queue"
}

ld_game_cmd() {
  next_game=$(cat "$ld_state_file" | grep " IN_PROGRESS$")
  if [[ "$next_game" == "" ]]; then
      echo "no more games in the queue NotLikeThis"
      return
  fi
  next_game_slug=$(echo "$next_game" | cut -d' ' -f1)
  next_game_twitch=$(echo "$next_game" | cut -d' ' -f2)
  resp=$(grep -E "^$next_game_slug" "$ld_data_file" | cut -d' ' -f2-)
  entry_type=$(echo "$resp" | jq -r '.type')
  gamename=$(echo "$resp" | jq -r '.name')
  author=$(echo "$resp" | jq -r '.author')
  friends=$(echo "$resp" | jq -r '.authorCount')
  slug=$(echo "$resp" | jq -r '.slug')
  url=$(shorten-url \
      "https://ldjam.com/events/ludum-dare/$LDJAM_INDEX/$next_game_slug" \
      $(echo "$author" | tr '[:upper:]' '[:lower:]') \
      | jq -r '.shortCode')
  if [[ "$friends" != "1" ]]; then
      fc="$((friends-1))"
      author="$author and $fc friends"
  fi
  echo "We are playing '$gamename' by $author ($entry_type entry) :D https://cgs.dev/0/$url"
}

ld_endraffle_cmd() {
  if ! test -f "${ld_raffle_file}_LOCK"; then
      echo "no raffle started. did you mean to do !raffle?"
      return
  fi
  rm -f "${ld_raffle_file}_LOCK"
  winner=$(shuf "$ld_raffle_file" | head -n1)
  # mark any in progress games as played
  sed -i "s/IN_PROGRESS$/PLAYED/" $ld_state_file

  next_game=$(cat "$ld_state_file" | grep -vE " PLAYED$" | grep -E "\\w* $winner" | head -n1)
  next_game_slug=$(echo "$next_game" | cut -d' ' -f1)
  next_game_twitch=$(echo "$next_game" | cut -d' ' -f2)
  if [[ "$next_game" == "" ]]; then
      echo "something has gone horribly wrong NotLikeThis"
      return
  fi
  resp=$(grep -E "^$next_game_slug" "$ld_data_file" | cut -d' ' -f2-)
  entry_type=$(echo "$resp" | jq -r '.type')
  name=$(echo "$resp" | jq -r '.name')
  author=$(echo "$resp" | jq -r '.author')
  friends=$(echo "$resp" | jq -r '.authorCount')
  slug=$(echo "$resp" | jq -r '.slug')
  url=$(shorten-url \
      "https://ldjam.com/events/ludum-dare/$LDJAM_INDEX/$next_game_slug" \
      $(echo "$author" | tr '[:upper:]' '[:lower:]') \
      | jq -r '.shortCode')
  if [[ "$friends" != "1" ]]; then
      fc="$((friends-1))"
      author="$author and $fc friends"
  fi
  # update state
  sed -i "s/^\\($slug \\w*\\)$/\\1 IN_PROGRESS/" $ld_state_file
  echo "@$winner has won the raffle! Please introduce yourself and your game if you want :)"
  echo "Up next! '$name' by $author ($entry_type entry) https://cgs.dev/0/$url"
}

ld_join_cmd() {
  if ! test -f "${ld_raffle_file}_LOCK"; then
      return
  fi

  if (cat "$ld_raffle_file" | cut -d' ' -f2 | grep -q "$name"); then
      return
  fi
  queue_names=$(cat "$ld_state_file" | grep -vE " PLAYED$" | grep -vE " IN_PROGRESS$" | cut -d' ' -f2)
  if ! ( echo "$queue_names" | grep -q "$name" ); then
      echo "@$name you need to paste the link to your game to register first!"
      return
  fi
  echo "$name" >> "$ld_raffle_file"
}

ld_queue_cmd() {
  pos=$(grep -vE " PLAYED$" "$ld_state_file" | grep -vE " IN_PROGRESS$" | cut -d' ' -f2 | grep -n "$name" | head -n1 | cut -d':' -f1)
  pos2=$(grep -E " IN_PROGRESS$" "$ld_state_file" | cut -d' ' -f2 | grep -n "$name")
  unplayed=$(grep -vE " PLAYED$" "$ld_state_file" | wc -l)
  if [[ "$unplayed" == "0" ]]; then
      echo "There are no games in the queue. Yours can be next! Just paste the link in chat :)"
      return
  fi
  queuestr="Uploading current queue..."
  if [[ "$pos2" != "" ]]; then
      echo "Your game is being played right now! :O | $queuestr"
  elif [[ "$pos" == "" ]]; then
      echo "You are not in the queue. Paste the link in chat and I'll add it! | $queuestr"
  else
      echo "Your game is #$pos in the queue :) | $queuestr"
  fi
  echo "$(grep -vE "PLAYED$" "$ld_state_file" | cut -d' ' -f1 | sed 's@^@https://ldjam.com/events/ludum-dare/'$LDJAM_INDEX'/@' | nc termbin.com 9999)"
}

ld_next_cmd() {
  if [[ "$name" != "$CHAN" ]] && [[ "$name" != "badcop_" ]]; then
      return
  fi

  # mark any in progress games as played
  sed -i "s/IN_PROGRESS$/PLAYED/" $ld_state_file

  next_game=$(cat "$ld_state_file" | grep -vE " PLAYED$" | head -n1)
  next_game_slug=$(echo "$next_game" | cut -d' ' -f1)
  next_game_twitch=$(echo "$next_game" | cut -d' ' -f2)
  if [[ "$next_game" == "" ]]; then
      echo "no more games in the queue NotLikeThis"
      return
  fi
  resp=$(grep -E "^$next_game_slug" "$ld_data_file" | cut -d' ' -f2-)
  entry_type=$(echo "$resp" | jq -r '.type')
  name=$(echo "$resp" | jq -r '.name')
  author=$(echo "$resp" | jq -r '.author')
  friends=$(echo "$resp" | jq -r '.authorCount')
  slug=$(echo "$resp" | jq -r '.slug')
  url=$(shorten-url \
      "https://ldjam.com/events/ludum-dare/$LDJAM_INDEX/$next_game_slug" \
      $(echo "$author" | tr '[:upper:]' '[:lower:]') \
      | jq -r '.shortCode')
  if [[ "$friends" != "1" ]]; then
      fc="$((friends-1))"
      author="$author and $fc friends"
  fi
  # update state
  sed -i "s/^\\($slug \\w*\\)$/\\1 IN_PROGRESS/" $ld_state_file
  echo "Up next! '$name' by $author ($entry_type entry) https://cgs.dev/0/$url"
  echo "if @$next_game_twitch is still here, say hi!"
}
