#!/bin/zsh

cd "${0%/*}"

CHAN="badcop_"
source ./fish-cmds

rm -f /tmp/tau_tunnel;
mkfifo /tmp/tau_tunnel;

# TODO: move this somewhere else
LDJAM_INDEX=54
LDJAM_ENABLED=true
ITCHJAM_ENABLED=false

source ./ld-cmds;
source ./jam-cmds;

reqreader() {
  while IFS= read -r line; do
    if [[ "$line" == "SYSTEM_EV "* ]]; then

      echo "$line" | cut -d' ' -f2- 1>&2
      echo "$line" | cut -d' ' -f2-
    else
      # parse incoming messages
      MESSAGE_TYPE=$(echo "$line" | jq -r '.message_type')
      echo "'$MESSAGE_TYPE'" 1>&2
      case $MESSAGE_TYPE in
        "fish-champion")
          wins="$(echo "$line" | jq -cr '.data.stats.wins')"
          caughtBy="$(echo "$line" | jq -cr '.data.caughtBy')"
          fishfloat="$(echo "$line" | jq -cr '.data.float')"
          echo "$wins $caughtBy $fishfloat" 1>&2
          if [[ "$wins" -ge 10 ]]; then
            mkdir -p "$HOME/fishing-data/$CHAN/hall-of-fame"
            echo "$line" | jq -cr '.data' >> "$HOME/fishing-data/$CHAN/hall-of-fame/json"
          fi
          # update our fish in the database
          sed -i '/^[^,]\+,[^,]\+,'$fishfloat',[^,]\+,[^,]\+,[^,]\+,[^,]\+$/s/\(.*\)/\1,'$wins'/' "$HOME/fishing-data/$CHAN/$caughtBy"
        ;;
        "wheel-result")
          WINNER=$(echo "$line" | jq -r '.data.winner')
          [[ "$LDJAM_ENABLED" == true ]] && send-twitch-msg "$(ld_endraffle_cmd2 "$WINNER")"
          [[ "$ITCHJAM_ENABLED" == true ]] && send-twitch-msg "$(itch_endraffle_cmd2 "$WINNER")"
        ;;
      esac
    fi
  done;
  exit 0;
}

authenticate() {
    echo '{"token":"'$(cat ~/.tau_token)'"}'
}

set -o pipefail;
while true; do
  (authenticate; </tmp/tau_tunnel | reqreader) \
      | websocat -E 'wss://tau.cgs.dev/ws/message-broker/' --ping-interval 10 --ping-timeout 15 \
      | >/tmp/tau_tunnel;
  FAILED=$?
  echo "$FAILED"
  if [[ "$FAILED" -ge 130 ]]; then
    exit 0
  fi
  echo "IT CRASHED, RESTARTING"
done
